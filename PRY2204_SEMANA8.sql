-- ===========================================================
-- PROYECTO SEMANA 8 - MiniMarket "Doña Marta"
-- Autor: Alberto Agustín García
-- ===========================================================


BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE PRODUCTO CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE MARCA CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE VENTA CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE VENDEDOR CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE SALUD CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE AFP CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- ===========================================================
-- 0. CREACIÓN DE TABLAS
-- ===========================================================

-- Tabla AFP
CREATE TABLE AFP (
    id_afp NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6),
    nombre_afp VARCHAR2(50) CONSTRAINT afp_nn_nombre NOT NULL,
    CONSTRAINT afp_pk PRIMARY KEY (id_afp)
);

-- Tabla SALUD
CREATE TABLE SALUD (
    id_salud NUMBER CONSTRAINT salud_pk PRIMARY KEY,
    nombre_salud VARCHAR2(50) CONSTRAINT salud_nn_nombre NOT NULL
);

-- Tabla MEDIO_PAGO
CREATE TABLE MEDIO_PAGO (
    id_medio_pago NUMBER CONSTRAINT mediopago_pk PRIMARY KEY,
    tipo_medio_pago VARCHAR2(50) CONSTRAINT mediopago_nn_tipo NOT NULL
);

-- Tabla REGION
CREATE TABLE REGION (
    id_region NUMBER CONSTRAINT region_pk PRIMARY KEY,
    nombre_region VARCHAR2(50) CONSTRAINT region_nn_nombre NOT NULL
);

-- Tabla PROVEEDOR
CREATE TABLE PROVEEDOR (
    id_proveedor NUMBER CONSTRAINT proveedor_pk PRIMARY KEY,
    nombre_proveedor VARCHAR2(100) CONSTRAINT proveedor_nn_nombre NOT NULL,
    correo VARCHAR2(100),
    telefono VARCHAR2(20),
    id_region NUMBER,
    CONSTRAINT proveedor_fk_region FOREIGN KEY (id_region) REFERENCES REGION(id_region)
);

-- Tabla MARCA
CREATE TABLE MARCA (
    id_marca NUMBER CONSTRAINT marca_pk PRIMARY KEY,
    nombre VARCHAR2(50) CONSTRAINT marca_nn_nombre NOT NULL
);

-- Tabla CATEGORIA
CREATE TABLE CATEGORIA (
    id_categoria NUMBER CONSTRAINT categoria_pk PRIMARY KEY,
    nombre_categoria VARCHAR2(50) CONSTRAINT categoria_nn_nombre NOT NULL
);

-- Tabla PRODUCTO
CREATE TABLE PRODUCTO (
    id_producto NUMBER CONSTRAINT producto_pk PRIMARY KEY,
    nombre_producto VARCHAR2(100) CONSTRAINT producto_nn_nombre NOT NULL,
    precio NUMBER CONSTRAINT producto_nn_precio NOT NULL,
    stock_minimo NUMBER CONSTRAINT producto_nn_stock NOT NULL,
    id_marca NUMBER,
    id_categoria NUMBER,
    id_proveedor NUMBER,
    CONSTRAINT producto_fk_marca FOREIGN KEY (id_marca) REFERENCES MARCA(id_marca),
    CONSTRAINT producto_fk_categoria FOREIGN KEY (id_categoria) REFERENCES CATEGORIA(id_categoria),
    CONSTRAINT producto_fk_proveedor FOREIGN KEY (id_proveedor) REFERENCES PROVEEDOR(id_proveedor)
);

-- Tabla EMPLEADO
CREATE TABLE EMPLEADO (
    id_empleado NUMBER CONSTRAINT empleado_pk PRIMARY KEY,
    rut_empleado VARCHAR2(12) CONSTRAINT empleado_un_rut UNIQUE NOT NULL,
    nombre VARCHAR2(50) CONSTRAINT empleado_nn_nombre NOT NULL,
    apellido_paterno VARCHAR2(50) CONSTRAINT empleado_nn_apepat NOT NULL,
    apellido_materno VARCHAR2(50),
    sueldo_base NUMBER CONSTRAINT empleado_nn_sueldo NOT NULL,
    bono NUMBER,
    activo CHAR(1) DEFAULT 'S' CONSTRAINT empleado_ck_activo CHECK (activo IN ('S','N')),
    id_afp NUMBER,
    id_salud NUMBER,
    CONSTRAINT empleado_fk_afp FOREIGN KEY (id_afp) REFERENCES AFP(id_afp),
    CONSTRAINT empleado_fk_salud FOREIGN KEY (id_salud) REFERENCES SALUD(id_salud)
);

-- Tabla VENDEDOR
CREATE TABLE VENDEDOR (
    id_vendedor NUMBER CONSTRAINT vendedor_pk PRIMARY KEY,
    id_empleado NUMBER CONSTRAINT vendedor_fk_empleado REFERENCES EMPLEADO(id_empleado),
    porcentaje_comision NUMBER,
    CONSTRAINT vendedor_un_empleado UNIQUE (id_empleado)
);

-- Tabla VENTA
CREATE TABLE VENTA (
    id_venta NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3),
    id_vendedor NUMBER CONSTRAINT venta_fk_vendedor REFERENCES VENDEDOR(id_vendedor),
    id_medio_pago NUMBER CONSTRAINT venta_fk_mediopago REFERENCES MEDIO_PAGO(id_medio_pago),
    monto_total NUMBER CONSTRAINT venta_ck_monto CHECK (monto_total >= 0),
    fecha_venta DATE,
    CONSTRAINT venta_pk PRIMARY KEY (id_venta)
);

-- Tabla DETALLE_VENTA
CREATE TABLE DETALLE_VENTA (
    id_detalle NUMBER CONSTRAINT detalleventa_pk PRIMARY KEY,
    id_venta NUMBER CONSTRAINT detalleventa_fk_venta REFERENCES VENTA(id_venta),
    id_producto NUMBER CONSTRAINT detalleventa_fk_producto REFERENCES PRODUCTO(id_producto),
    cantidad NUMBER,
    subtotal NUMBER
);

-- ===========================================================
-- 1. CREACIÓN DE SECUENCIAS
-- ===========================================================

-- Secuencia para tabla SALUD
CREATE SEQUENCE seq_salud
START WITH 2050
INCREMENT BY 10
NOCACHE
NOCYCLE;

-- Secuencia para tabla EMPLEADO
CREATE SEQUENCE seq_empleado
START WITH 750
INCREMENT BY 3
NOCACHE
NOCYCLE;

-- ===========================================================
-- 2. REGLAS DE NEGOCIO (ALTER TABLE)
-- ===========================================================

-- 1. Sueldo base mínimo $400.000
ALTER TABLE EMPLEADO
ADD CONSTRAINT empleado_ck_sueldo CHECK (sueldo_base >= 400000);

-- 2. Comisión entre 0 y 0.25
ALTER TABLE VENDEDOR
ADD CONSTRAINT vendedor_ck_comision CHECK (porcentaje_comision BETWEEN 0 AND 0.25);

-- 3. Stock mínimo de producto >= 3
ALTER TABLE PRODUCTO
ADD CONSTRAINT producto_ck_stock CHECK (stock_minimo >= 3);

-- 4. Correo de proveedor único
ALTER TABLE PROVEEDOR
ADD CONSTRAINT proveedor_un_email UNIQUE (correo);

-- 5. Nombre de marca único
ALTER TABLE MARCA
ADD CONSTRAINT marca_un_nombre UNIQUE (nombre);

-- 6. Cantidad del detalle de venta > 0
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT detalleventa_ck_cantidad CHECK (cantidad > 0);

-- ===========================================================
-- 3. POBLAMIENTO DE TABLAS
-- ===========================================================

-- AFP
INSERT INTO AFP (nombre_afp) VALUES ('Habitat');
INSERT INTO AFP (nombre_afp) VALUES ('Provida');
INSERT INTO AFP (nombre_afp) VALUES ('Cuprum');

-- SALUD
INSERT INTO SALUD (id_salud, nombre_salud) VALUES (seq_salud.NEXTVAL, 'FONASA');
INSERT INTO SALUD (id_salud, nombre_salud) VALUES (seq_salud.NEXTVAL, 'ISAPRE Colmena');
INSERT INTO SALUD (id_salud, nombre_salud) VALUES (seq_salud.NEXTVAL, 'ISAPRE Cruz Blanca');

-- MEDIO_PAGO
INSERT INTO MEDIO_PAGO VALUES (1, 'Efectivo');
INSERT INTO MEDIO_PAGO VALUES (2, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO VALUES (3, 'Tarjeta Crédito');

-- REGION
INSERT INTO REGION VALUES (1, 'Metropolitana');
INSERT INTO REGION VALUES (2, 'Biobío');
INSERT INTO REGION VALUES (3, 'Los Lagos');

-- PROVEEDOR
INSERT INTO PROVEEDOR VALUES (1, 'Distribuidora Sur', 'contacto@sur.cl', '987654321', 3);
INSERT INTO PROVEEDOR VALUES (2, 'Abarrotes Chile', 'ventas@abarrotes.cl', '956432189', 1);
INSERT INTO PROVEEDOR VALUES (3, 'Lácteos del Valle', 'info@valle.cl', '945612378', 2);

-- MARCA
INSERT INTO MARCA VALUES (1, 'Colun');
INSERT INTO MARCA VALUES (2, 'Coca-Cola');
INSERT INTO MARCA VALUES (3, 'Ideal');

-- CATEGORIA
INSERT INTO CATEGORIA VALUES (1, 'Lácteos');
INSERT INTO CATEGORIA VALUES (2, 'Bebidas');
INSERT INTO CATEGORIA VALUES (3, 'Panadería');

-- PRODUCTO
INSERT INTO PRODUCTO VALUES (1, 'Leche Entera 1L', 1200, 10, 1, 1, 3);
INSERT INTO PRODUCTO VALUES (2, 'Pan de Molde 500g', 1500, 6, 3, 3, 2);
INSERT INTO PRODUCTO VALUES (3, 'Bebida 1.5L', 1800, 12, 2, 2, 1);

-- EMPLEADO
INSERT INTO EMPLEADO VALUES (seq_empleado.NEXTVAL, '12.345.678-9', 'Juan', 'Pérez', 'López', 850000, 50000, 'S', 210, 2050);
INSERT INTO EMPLEADO VALUES (seq_empleado.NEXTVAL, '16.789.654-2', 'Ana', 'Muñoz', 'Reyes', 720000, NULL, 'S', 216, 2060);
INSERT INTO EMPLEADO VALUES (seq_empleado.NEXTVAL, '17.555.123-4', 'Carlos', 'Soto', 'Gómez', 640000, 40000, 'S', 222, 2070);

-- VENDEDOR
INSERT INTO VENDEDOR VALUES (1, 750, 0.05);
INSERT INTO VENDEDOR VALUES (2, 753, 0.08);

-- VENTA
INSERT INTO VENTA (id_vendedor, id_medio_pago, monto_total, fecha_venta)
VALUES (1, 2, 45000, SYSDATE);
INSERT INTO VENTA (id_vendedor, id_medio_pago, monto_total, fecha_venta)
VALUES (2, 1, 32000, SYSDATE);

-- DETALLE_VENTA
INSERT INTO DETALLE_VENTA VALUES (1, 5050, 1, 2, 2400);
INSERT INTO DETALLE_VENTA VALUES (2, 5053, 2, 1, 1500);

COMMIT;

-- ===========================================================
-- 4. INFORMES SOLICITADOS
-- ===========================================================

-- INFORME 1: Sueldo total estimado con bono
SELECT 
    id_empleado AS "IDENTIFICADOR",
    nombre || ' ' || apellido_paterno || ' ' || apellido_materno AS "NOMBRE COMPLETO",
    sueldo_base AS "SALARIO",
    bono AS "BONIFICACION",
    (sueldo_base + bono) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE activo = 'S'
  AND bono IS NOT NULL
ORDER BY (sueldo_base + bono) DESC, apellido_paterno DESC;

-- INFORME 2: Empleados con sueldo medio y posible aumento
SELECT 
    nombre || ' ' || apellido_paterno || ' ' || apellido_materno AS "EMPLEADO",
    sueldo_base AS "SUELDO",
    (sueldo_base * 0.08) AS "POSIBLE AUMENTO",
    (sueldo_base * 1.08) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE sueldo_base BETWEEN 550000 AND 800000

ORDER BY sueldo_base ASC;
